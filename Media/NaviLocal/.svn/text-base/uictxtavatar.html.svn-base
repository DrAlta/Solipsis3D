<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en">
    <head>
        <title>uictxtavatar</title>
	    <script type="text/javascript" src="Navi-yui.js"></script>
        <script type="text/javascript">
            /*
            * A super-cool class that lets you 'bloom' some elements
            * outwards into a circle around a fixed point (the top-left corner
            * of the list).
            *
            * Options:
            * 	radius - How far from the fixed point should each item bloom?
            * 	itemWidth - The width of each list item. (used to determine the offset from the item's vertex)
            * 	itemHeight - The height of each list item. (used to determine the offset from the item's vertex)
            * 	animate - Whether or not to animate the bloom, default is true.
            * 	fxOptions - The options to use for the effect, see <http://docs.mootools.net/Effects/Fx-Base.js#Fx.Base>
            */
            var ElementBloom = new Class({
                options: {
                    radius: 60,
                    itemWidth: 50,
                    itemHeight: 50,
                    animate: true,
                    fxOptions: {}
                },
                initialize: function(listEle, options){
                    this.setOptions(options);
                    this.listEle = $(listEle).setStyle('display', 'none');
                    this.listItems = this.listEle.getElements('li').setStyles({
                        position: 'absolute',
                        display: 'block',
                        width: this.options.itemWidth,
                        height: this.options.itemHeight,
                        top: -this.options.itemWidth/2,
                        left: -this.options.itemHeight/2
                    });
                    this.fx = new Fx.Elements(this.listItems, this.options.fxOptions);
                },
                open: function(){
                    this.listEle.setStyle('display', 'block');
                    var fxData = {};
                    for(var i = 0; i < this.listItems.length; ++i)
                    {
                        var percent = 1 - (i / this.listItems.length);
                        fxData[i] = {
                            top: this.options.radius * Math.cos((percent * 2 * Math.PI) + Math.PI) - (this.options.itemHeight / 2),
                            left: this.options.radius * Math.sin((percent * 2 * Math.PI) + Math.PI) - (this.options.itemWidth / 2)
                        };
                    }
                    this.options.animate? this.fx.start(fxData) : this.fx.set(fxData);;
                },
                close: function(){
                    if(!this.options.animate)
                    {
                        this.listEle.setStyle('display', 'none');
                        return;
                    }
                    var fxData = {};
                    for(var i = 0; i < this.listItems.length; ++i)
                        fxData[i] = {
                            top: -this.options.itemWidth/2,
                            left: -this.options.itemHeight/2
                        };
                        this.fx.start(fxData).chain((function(){ this.listEle.setStyle('display', 'none') }).bind(this));
                    }		
                });
                ElementBloom.implement(new Options);

                // Everything within this block will execute when the Document-Object-Model of the page is ready
                window.addEvent('domready', function(){
                    // Initialize local variables from Page Navi Data
                    var itemWidth = $PND.get('itemWidth').toInt(), itemHeight = $PND.get('itemHeight').toInt();
                    var items = $PND.get('items').split('#');

                    // Build the menu
                    var pieMenu = new Element('ul');
                    items.each(function(image, i){
                    pieMenu.adopt(new Element('li', {
                        events: { click: function(){ $ND('contextItemSelected', {item: image}).send(); } },
                        styles: { 'background-image': "url('uictxbtn" + image + ".png')" }
                    }));
                });

                // Add the menu to actual DOM
                $('PieContainer').adopt(pieMenu);

                // Center the menu in the middle of the window
                pieMenu.setStyles({
                    position: 'absolute',
                    display: 'block',
                    left: window.getWidth()/2,
                    top: window.getHeight()/2,
                });

                // Apply the ElementBloom class to our pie-menu and configure it
                var bloom = new ElementBloom(pieMenu, {
                    itemWidth: itemWidth,
                    itemHeight: itemHeight,
                    fxOptions: {fps: 40, transition: Fx.Transitions.Quad.easeOut}
                });

                // Animate the instance, blooming outwards
                bloom.open();
            });
        </script>
        <script type="text/javascript">
            function pageLoaded()
            {
                new NaviData('pageLoaded').add({naviName:'uictxtavatar'}).send();
            }
        </script>
        <style type="text/css">
            body {
                background-color: #010203;
            }
        </style>
    </head>
    <body onload="pageLoaded()">
        <div id="PieContainer"></div>
    </body>
</html>