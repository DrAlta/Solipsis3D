This compilation is performed on Win32 platform with Cygwin/MinGW_GCC345 configuration
with VLC downloaded packages release 0.8.6e, those packages were taken from
http://download.videolan.org/pub/videolan/vlc/0.8.6e/vlc-0.8.6e.tar.gz
http://downloads.videolan.org/pub/videolan/testing/win32/contrib-0.8.6e-gcc-3.4.5-only.tar.bz2
(contribs also available on http://download.videolan.org/pub/videolan/vlc/<release>/win32)
($ is the prompt you have to enter the command line into the Cygwin bash shell)

Download Cygwin build environment (www.cygwin.com)
Run the Setup.exe
Choose 1 mirror site (eg. http://cygwin.cybermirror.org)
Download/Install those packages
Select first all packages prefixed by #-, other packages are dependent from,
so they should be automatically installed
# ash 20040127-3
# autoconf 4-1
# autoconf2.1 2.13-3
# autoconf2.5 2.61-1
#- automake 2-1
# automake1.10 1.10.1-1
# automake1.4 1.4p6-4
# automake1.5 1.5-2
# automake1.6 1.6.3-3
# automake1.7 1.7.9-3
# automake1.8 1.8.5-3
# automake1.9 1.9.6-2
# bash 3.2.33-18
#- binutils 20060817-1
# bzip2 1.0.5-2
# coreutils 6.10-1
# crypt 1.1-1
#- cvs 1.11.22-1
# diffutils 2.8.7-1
# file 4.21-1
# findutils 4.4.0-1
# gawk 3.1.6-1
#- gcc-core 3.4.4-3
#- gcc-g++ 3.4.4-3
#- gcc-mingw 20040810-1
#- gcc-mingw-core 20050522-1
#- gcc-mingw-g++ 20050522-1
#- gettext 0.15-1
#- gettext-devel 0.15-1
# gzip 1.3.12-2
#- libgcrypt 1.4.0-1
# libiconv 1.11-1
# libiconv2 1.11-1
#- libtool 1.5.27a-1
#- make 3.81-2
#- mingw-runtime 3.14-1
# patch 2.5.8-9
# perl 5.8.8-4
#- pkg-config 0.23a-1
#- subversion 1.4.5-2
#- unzip 5.52-2
# w32api 3.11-1
#- zip 2.32-2
# zlib 1.2.3-2

Open 1 Cygwin bash shell (You should have 1 shortcut into Start/Programs/Cygwin)
In the following keep care to edit files with UNIX-compatible editor (CR+LF chars MUST be avoid !!!),
otherwise run dos2unix.exe on the CR+LF'ed file

Unzip sources (vlc-0.8.6e.tar.gz) into this directory /build_vlc/vlc-0.8.6e (in next steps <VLCSRC> points to this directory)
$ cd /cygdrive/.../build_vlc
$ tar xvzf vlc-0.8.6e.tar.gz -C ./

Unzip contribs (contrib-0.8.6e-gcc-3.4.5-only.tar.bz2) into the /usr/win32-branch directory of your Cygwin directory C:\cygwin\usr\win32-branch
$ cd /cygdrive/.../build_vlc
$ tar xjvf contrib-0.8.6e-gcc-3.4.5-only.tar.bz2 -C /

Now we will add the VMEM plugin for VLC:
Copy the plugin source file build_vlc/modules/video_output/vmem.c into <VLCSRC>/modules/video_output
We will add this plugin into list of modules to build, edit the file <VLCSRC>/modules/video_output/Modules.am
 add this line at the end:
 SOURCES_vmem = vmem.c
We will add this plugin into list of default modules, edit the file <VLCSRC>/configure.ac
 dnl
 dnl  default modules
 dnl
 ...
 VLC_ADD_PLUGINS([i420_rgb rawvideo blend scale image vmem logo magnify])
Finally we will add 1 configure arg, in the same file configure.ac, add the following vmem dedicated text block after win32 GDI for example
 dnl
 dnl  win32 GDI plugin
 dnl
 ...

 dnl
 dnl  vmem plugin
 dnl
 AC_ARG_ENABLE(vmem,
   [  --enable-vmem         VMem module (default enabled on Win32)])
 if test "${enable_vmem}" != "no"; then
   if test "${SYS}" = "mingw32" -o "${SYS}" = "cygwin"; then
     VLC_ADD_PLUGINS([vmem])
   fi
   if test "${SYS}" = "mingwce"; then
     VLC_ADD_PLUGINS([vmem])
   fi
 fi

Now we will add the AMEM plugin for VLC:
Copy the plugin source file build_vlc/modules/audio_output/amem.c into <VLCSRC>/modules/video_output
We will add this plugin into list of modules to build, edit the file <VLCSRC>/modules/video_output/Modules.am
 add this line at the end:
 SOURCES_amem = amem.c
We will add this plugin into list of default modules, edit the file <VLCSRC>/configure.ac
 dnl
 dnl  default modules
 dnl
 ...
 VLC_ADD_PLUGINS([i420_rgb rawvideo blend scale image vmem amem logo magnify])
Finally we will add 1 configure arg, in the same file configure.ac, add the following amem dedicated text block after JACK for example
 dnl
 dnl  JACK plugin
 dnl
 ...

 dnl
 dnl  amem plugin
 dnl
 AC_ARG_ENABLE(amem,
   [  --enable-amem         AMem module (default enabled on Win32)])
 if test "${enable_amem}" != "no"; then
   if test "${SYS}" = "mingw32" -o "${SYS}" = "cygwin"; then
     VLC_ADD_PLUGINS([amem])
   fi
   if test "${SYS}" = "mingwce"; then
     VLC_ADD_PLUGINS([amem])
   fi
 fi

$ export CONTRIBS=/usr/win32-branch
$ export PATH=${CONTRIBS}/bin:$PATH
$ cd /cygdrive/.../<VLCSRC>
$ ./bootstrap

$ export PKG_CONFIG_PATH=$CONTRIBS/lib/pkgconfig \
       CPPFLAGS="-I$CONTRIBS/include -I$CONTRIBS/include/ebml" CXXCPP=$CPPFLAGS \
       LDFLAGS=-L$CONTRIBS/lib \
       CC='gcc -mno-cygwin' CXX='g++ -mno-cygwin'

To avoid some compilation errors (I got on this vlc release) perform those workaround actions:
 # about compilation error "parse error before off_t" into sys/stat.h:
 #  if you experienced troubles with undefined _off_t when compiling,
 #  edit <VLCSRC>/modules/access_output/file.c, udp.c and <VLCSRC>/modules/mux/mpeg/pes.c and comment #include <sys/stat.h>
 #
 # about compilation error "off_t does not name a type":
 #  define _off_t into /usr/include/mingw/wchar.h just after the time_t definition
 #  #ifndef _OFF_T DEFINED
 #  typedef long off_t;
 #  #define _OFF_T DEFINED
 #  #endif
 # (OR into /usr/include/mingw/sys/types.h)

To fix problems about simultaneous instances of VLC, apply GREG updates from build_vlc/update/src into <VLCSRC>/src:
 libvlc.c, misc/messages.c, misc/unicode.c, misc/win32_specific.c


We will build in release mode:

$ ./configure \
     --disable-gtk \
     --enable-nls --enable-sdl --with-sdl-config-path=$CONTRIBS/bin \
     --enable-ffmpeg --with-ffmpeg-mp3lame --with-ffmpeg-faac \
     --with-ffmpeg-zlib --enable-faad --enable-flac --enable-theora \
     --with-wx-config-path=$CONTRIBS/bin \
     --with-freetype-config-path=$CONTRIBS/bin \
     --with-fribidi-config-path=$CONTRIBS/bin \
     --enable-live555 --with-live555-tree=$CONTRIBS/live.com \
     --enable-caca --with-caca-config-path=$CONTRIBS/bin \
     --with-xml2-config-path=$CONTRIBS/bin \
     --with-dvdnav-config-path=$CONTRIBS/bin \
     --disable-cddax --disable-vcdx --enable-goom \
     --enable-twolame --enable-dvdread \
     --disable-mkv \
     --enable-shared-libvlc \
     --enable-shared \
     --enable-shout \
     --enable-vmem \
     --enable-amem

To avoid pb with libtool about shared libs (suffix DLL vs DLL.EXE), we have to edit the libtool script created auto. by VLC configure step:
Edit <VLCSRC>/libtool
 search lines:
    prog)
      case $host in
	*cygwin*) output=`$echo $output | ${SED} -e 's,.exe$,,;s,$,.exe,'` ;;
      esac
 replace line: output=`$echo $output | ${SED} -e 's,.exe$,,;s,$,.exe,'` ;;
 by this line: output=`$echo $output` 

$ make

Check vlc.exe is well linked with libvlc.dll (and not libvlc.dll.exe when using bad libtool script)
$ objdump -p vlc.exe
...
        DLL Name: libvlc.dll
...

We generate the resulting package directory (called <VLCPKG> in next steps, eg. /build_vlc/vlc-0.8.6e/vlc-0.8.6e)
$ make package-win32-base

Now, to use this libvlc.dll we have to generate the Microsoft .lib file
Copy the definition file build_vlc/libvlc.def into the resulting package directory <VLCPKG>
Open 1 Windows command shell (with cmd.exe or the Start menu shortcut)
Go into the Tools sub-directory of your Visual Studio release (eg. cd C:\Program Files\Microsoft Visual Studio 8\Common7\Tools)
Run the environment setting script:
 vsvars32.bat
Go into <VLCPKG>
lib.exe /machine:i386 /def:libvlc.def

Now, run the copy_vlc_files.bat to install dependencies files
 cd build_vlc
 copy_vlc_files.bat




If you want to build in debug mode:

$ ./configure \
     --disable-gtk \
     --enable-nls --enable-sdl --with-sdl-config-path=$CONTRIBS/bin \
     --enable-ffmpeg --with-ffmpeg-mp3lame --with-ffmpeg-faac \
     --with-ffmpeg-zlib --enable-faad --enable-flac --enable-theora \
     --with-wx-config-path=$CONTRIBS/bin \
     --with-freetype-config-path=$CONTRIBS/bin \
     --with-fribidi-config-path=$CONTRIBS/bin \
     --enable-live555 --with-live555-tree=$CONTRIBS/live.com \
     --enable-caca --with-caca-config-path=$CONTRIBS/bin \
     --with-xml2-config-path=$CONTRIBS/bin \
     --with-dvdnav-config-path=$CONTRIBS/bin \
     --disable-cddax --disable-vcdx --enable-goom \
     --enable-twolame --enable-dvdread \
     --enable-debug \
     --disable-mkv \
     --enable-shared-libvlc \
     --enable-shared \
     --enable-shout \
     --enable-vmem \
     --enable-amem

To avoid pb with libtool about shared libs (suffix DLL vs DLL.EXE), we have to edit the libtool script created auto. by VLC configure step:
Edit <VLCSRC>/libtool
 replace line: output=`$echo $output | ${SED} -e 's,.exe$,,;s,$,.exe,'` ;;
 by this line: output=`$echo $output` ;;

$ make

Check vlc.exe is well linked with libvlc.dll (and not libvlc.dll.exe when using bad libtool script)
$ objdump -p vlc.exe
...
        DLL Name: libvlc.dll
...

We generate the resulting package directory (called <VLCPKG> in next steps, eg. /build_vlc/vlc-0.8.6e/vlc-0.8.6e)
$ make package-win32-base-debug

Now, to use this libvlc.dll we have to generate the Microsoft .lib file
Copy the definition file build_vlc/libvlc.def into the resulting package directory <VLCPKG>
Open 1 Windows command shell (with cmd.exe or the Start menu shortcut)
Go into the Tools sub-directory of your Visual Studio release (eg. cd C:\Program Files\Microsoft Visual Studio 8\Common7\Tools)
Run the environment setting script:
 vsvars32.bat
Go into <VLCPKG>
lib.exe /machine:i386 /def:libvlc.def
(Note: Maybe we could also use the dlltool utility of Cygwin)

If you want to re-create the libvlc.def (for example you compile another vlc version),
first you have to get all exported functions of libvlc.dll, I use dllexportviewer, open the libvlc.dll,
select all functions and save the libvlc.txt text file containing exported functions names,
second step consists in parsing this libvlc.txt to create the libvlc.def file, open cygwin bash shell and
grep/gawk like this:
Go into <VLCPKG>
cat libvlc.txt | grep 'Function Name' > libvlc2.txt
echo 'LIBRARY LIBVLC.DLL' > libvlc.def
echo 'EXPORTS' >> libvlc.def
gawk -F' ' '{print $4}' libvlc2.txt >> libvlc.def
unix2dos libvlc.def

Now, run the copy_vlc_files.bat to install dependencies files
 cd build_vlc
 copy_vlc_files.bat


----------------------------------------------------
Notes about libvlc multi-instances and plugin config parameters problem

Even with latest release vlc 0.9.x, this problem is still not resolved,
parameters passed to plugins are global and resetted on each call

http://forum.videolan.org/viewtopic.php?f=32&t=54354
https://trac.videolan.org/vlc/ticket/2325


----------------------------------------------------
Notes about compilation with vlc 0.9.6

vmem.c is now integrated into default video_output modules so it s no more necessary to copy it from <VLCSRC>/modules/video_output

(contribs for 0.9.6 found on http://people.videolan.org/~jb/Contribs/contrib-20080811-win32-bin-gcc-4.2.1-sjlj-runtime-3.13-only.tar.bz2)
Unzip contribs (contrib-20080811-win32-bin-gcc-4.2.1-sjlj-runtime-3.13-only.tar.bz2) into the /usr/win32-branch_vlc096 directory of your Cygwin directory C:\cygwin\usr\win32-branch_vlc096
$ cd /cygdrive/.../build_vlc
$ tar xjvf contrib-0.8.6e-gcc-3.4.5-only.tar.bz2 -C /

Upgrade cygwin gettext with 0.17
If ./bootstrap warns about out-of-date gettext, don t worry about it.

$ export CONTRIBS=/usr/win32
$ export PATH=${CONTRIBS}/bin:$PATH
$ cd /cygdrive/.../<VLCSRC>
$ ./bootstrap

$ export PKG_CONFIG_PATH=$CONTRIBS/lib/pkgconfig \
       CPPFLAGS="-I$CONTRIBS/include -I$CONTRIBS/include/ebml" CXXCPP=$CPPFLAGS \
       LDFLAGS=-L$CONTRIBS/lib \
       CC='gcc -mno-cygwin' CXX='g++ -mno-cygwin'

We will build in release mode:

$ ./configure \
     --host=i686-pc-mingw32 \
     --disable-gtk \
     --enable-nls --enable-sdl --with-sdl-config-path=$CONTRIBS/bin \
     --enable-avcodec --enable-avformat --enable-swscale \
     --enable-faad --enable-flac --enable-theora \
     --with-wx-config-path=$CONTRIBS/bin \
     --with-freetype-config-path=$CONTRIBS/bin \
     --with-fribidi-config-path=$CONTRIBS/bin \
     --enable-live555 --with-live555-tree=$CONTRIBS/live.com \
     --enable-caca --with-caca-config-path=$CONTRIBS/bin \
     --with-xml2-config-path=$CONTRIBS/bin \
     --with-dvdnav-config-path=$CONTRIBS/bin \
     --disable-cddax --disable-vcdx --enable-goom \
     --enable-twolame --enable-dvdread \
     --enable-dca \
     --disable-mkv --disable-taglib

Edit libtool file and set in line 144:
# Take the output of nm and produce a listing of raw symbols and C names.
global_symbol_pipe="sed -n -e 's/^.*[   ]\\([ABCDGIRSTW][ABCDGIRSTW]*\\)[       ][      ]*\\(\\)\\([_A-Za-z][_A-Za-z0-9]*\\)\$/\\1\\2\\3 \\3/p'"

$ make

Making all in qt4
make[5]: Entering directory `/cygdrive/d/solipsis/Work/Solipsis/trunk/DevTools/vlc/build_vlc/vlc-0.9.6/modules/gui/qt4'
/usr/win32/bin/moc -DHAVE_CONFIG_H -I../../../include -I../../../include -I/usr/win32/include -I/usr/win32/include/ebml
-DSYS_MINGW32 -I../../.. `top_builddir="../../.." ../../../vlc-config --cppflags plugin qt4` -o main_interface.moc.cpp m
ain_interface.hpp
/usr/win32/bin/moc: /usr/win32/bin/moc: cannot execute binary file
make[5]: *** [main_interface.moc.cpp] Error 126
make[5]: Leaving directory `/cygdrive/d/solipsis/Work/Solipsis/trunk/DevTools/vlc/build_vlc/vlc-0.9.6/modules/gui/qt4'
make[4]: *** [all-recursive] Error 1
make[4]: Leaving directory `/cygdrive/d/solipsis/Work/Solipsis/trunk/DevTools/vlc/build_vlc/vlc-0.9.6/modules/gui'
make[3]: *** [all] Error 2
make[3]: Leaving directory `/cygdrive/d/solipsis/Work/Solipsis/trunk/DevTools/vlc/build_vlc/vlc-0.9.6/modules/gui'
make[2]: *** [all-recursive] Error 1
make[2]: Leaving directory `/cygdrive/d/solipsis/Work/Solipsis/trunk/DevTools/vlc/build_vlc/vlc-0.9.6/modules'
make[1]: *** [all-recursive] Error 1
make[1]: Leaving directory `/cygdrive/d/solipsis/Work/Solipsis/trunk/DevTools/vlc/build_vlc/vlc-0.9.6'
make: *** [all] Error 2

Rename or Delete Linux executables moc, rcc and uic into C:\cygwin\usr\win32\bin, in order to avoid win32 cygwin
try to launch them instead of .exe win32 versions

/usr/lib/gcc/i686-pc-mingw32/3.4.4/../../../../include/w32api/winbase.h:1690: error: declaration of C function `LONG Int
erlockedExchangeAdd(volatile LONG*, LONG)' conflicts with
/usr/win32/include/qt4/QtCore/qatomic_windows.h:397: error: previous declaration `long int InterlockedExchangeAdd(long i
nt*, long int)' here
/usr/lib/gcc/i686-pc-mingw32/3.4.4/../../../../include/w32api/winbase.h:1694: error: declaration of C function `LONG Int
erlockedIncrement(volatile LONG*)' conflicts with
/usr/win32/include/qt4/QtCore/qatomic_windows.h:394: error: previous declaration `long int InterlockedIncrement(long int
*)' here
make[6]: *** [libqt4_plugin_la-qt4.lo] Error 1
make[6]: Leaving directory `/cygdrive/d/solipsis/Work/Solipsis/trunk/DevTools/vlc/build_vlc/vlc-0.9.6/modules/gui/qt4'
make[5]: *** [all] Error 2
make[5]: Leaving directory `/cygdrive/d/solipsis/Work/Solipsis/trunk/DevTools/vlc/build_vlc/vlc-0.9.6/modules/gui/qt4'
make[4]: *** [all-recursive] Error 1
make[4]: Leaving directory `/cygdrive/d/solipsis/Work/Solipsis/trunk/DevTools/vlc/build_vlc/vlc-0.9.6/modules/gui'
make[3]: *** [all] Error 2
make[3]: Leaving directory `/cygdrive/d/solipsis/Work/Solipsis/trunk/DevTools/vlc/build_vlc/vlc-0.9.6/modules/gui'
make[2]: *** [all-recursive] Error 1
make[2]: Leaving directory `/cygdrive/d/solipsis/Work/Solipsis/trunk/DevTools/vlc/build_vlc/vlc-0.9.6/modules'
make[1]: *** [all-recursive] Error 1
make[1]: Leaving directory `/cygdrive/d/solipsis/Work/Solipsis/trunk/DevTools/vlc/build_vlc/vlc-0.9.6'
make: *** [all] Error 2

Run cygwin setup and downgrade w32api to 3.11.1

